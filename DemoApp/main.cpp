#include <iostream>
//#include "d-hello.h"
#include "version.h" // Header auto-generated by cmake
#include <onesdk/onesdk.h>
#include <windows.h>

static void InitOneSdk()
{
    onesdk_stub_set_logging_level(ONESDK_LOGGING_LEVEL_FINEST);

    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);

    // color your text in Windows console mode
    // colors are 0=black 1=blue 2=green and so on to 15=white  
    // colorattribute = foreground + background * 16
    // to get red text on yellow use 4 + 14*16 = 228
    // light red on yellow would be 12 + 14*16 = 236

    FlushConsoleInputBuffer(hConsole);

    onesdk_result_t const onesdk_init_result = onesdk_initialize();

    if (onesdk_init_result == ONESDK_SUCCESS)
    {
        SetConsoleTextAttribute(hConsole, 2);
        std::cout << "OneSDK initialised OK from console app" << std::endl;
    }
    else
    {
        SetConsoleTextAttribute(hConsole, 4);
        std::cout << "OneSDK initialised ERROR from console app" << std::endl;
    }

    SetConsoleTextAttribute(hConsole, 15); //set back to black background and white text
}

typedef void(__stdcall* funcptr)();

int main(int argc, char* argv[])
{
    if (argc > 0)
        std::cout << std::endl << "    Program " << argv[0] << " version: " << Example_VERSION_MAJOR << "." << Example_VERSION_MINOR << "." << Example_VERSION_PATCH << std::endl << std::endl;

    //InitOneSdk();

    //dHelloFun();

    auto dllModule = LoadLibrary("DLib.dll");
    if (!dllModule)
    {
        std::cout << "Could not load the dynamic library" << std::endl;
        return EXIT_FAILURE;
    }

    funcptr dHelloFun = (funcptr)GetProcAddress(dllModule, "dHelloFun");
    if (!dHelloFun)
    {
        std::cout << "Could not locate the function" << std::endl;
        return EXIT_FAILURE;
    }

    dHelloFun();

    std::cout << std::endl;
    std::cout << "Type any char and press Enter" << std::endl;

    char c;
    std::cin >> c;

    return 0;
}
